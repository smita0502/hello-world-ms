name: CI - Build, Test, Scan, Docker, Push

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
      JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      JFROG_REGISTRY: ${{ secrets.JFROG_REGISTRY }}
      IMAGE_NAME: hello-world-service

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and test with Maven
        run: mvn clean verify jacoco:report

#      - name: SonarQube Scan
#        uses: sonarsource/sonarqube-scan-action@v1.2.0
#        with:
#          projectBaseDir: .
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Log in to JFrog Docker Registry
        run: echo "${JFROG_PASSWORD}" | docker login $JFROG_REGISTRY -u "${JFROG_USERNAME}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $JFROG_REGISTRY/$IMAGE_NAME:latest .
          docker push $JFROG_REGISTRY/$IMAGE_NAME:latest

      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: https://sidgs.jfrog.io
          JF_USER: ${{ secrets.JFROG_USERNAME }}
          JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}

      - name: Xray Docker Image Scan
        run: |
          jf docker scan $JFROG_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        env:
          JFROG_REGISTRY: ${{ secrets.JFROG_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG || 'latest' }}